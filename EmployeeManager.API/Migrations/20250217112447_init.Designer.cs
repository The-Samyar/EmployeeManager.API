// <auto-generated />
using EmployeeManager.API.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManager.API.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20250217112447_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManager.API.Data.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("RewardRate")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RewardRate = 50.0,
                            Title = "Software Developer"
                        },
                        new
                        {
                            Id = 2,
                            RewardRate = 70.0,
                            Title = "Project Manager"
                        },
                        new
                        {
                            Id = 3,
                            RewardRate = 60.0,
                            Title = "Data Analyst"
                        },
                        new
                        {
                            Id = 4,
                            RewardRate = 55.0,
                            Title = "UX Designer"
                        },
                        new
                        {
                            Id = 5,
                            RewardRate = 65.0,
                            Title = "System Administrator"
                        });
                });

            modelBuilder.Entity("EmployeeManager.API.Data.Models.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Rewards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 5,
                            Message = "Excellent performance",
                            Rate = 250.0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Count = 3,
                            Message = "Great leadership",
                            Rate = 210.0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Count = 4,
                            Message = "Outstanding teamwork",
                            Rate = 300.0,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("EmployeeManager.API.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Admin",
                            IsAdmin = true,
                            LastName = "User",
                            Password = "admin",
                            PositionId = 5,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "John",
                            IsAdmin = false,
                            LastName = "Doe",
                            Password = "password",
                            PositionId = 1,
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Jane",
                            IsAdmin = false,
                            LastName = "Smith",
                            Password = "password",
                            PositionId = 2,
                            Username = "janesmith"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Alice",
                            IsAdmin = false,
                            LastName = "Johnson",
                            Password = "password",
                            PositionId = 3,
                            Username = "alicejohnson"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Bob",
                            IsAdmin = false,
                            LastName = "Brown",
                            Password = "password",
                            PositionId = 4,
                            Username = "bobbrown"
                        });
                });

            modelBuilder.Entity("EmployeeManager.API.Data.Models.Reward", b =>
                {
                    b.HasOne("EmployeeManager.API.Data.Models.User", "User")
                        .WithMany("Rewards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EmployeeManager.API.Data.Models.User", b =>
                {
                    b.HasOne("EmployeeManager.API.Data.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("EmployeeManager.API.Data.Models.User", b =>
                {
                    b.Navigation("Rewards");
                });
#pragma warning restore 612, 618
        }
    }
}
